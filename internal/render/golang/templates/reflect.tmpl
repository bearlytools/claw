{{- $file := .File }}
{{- if $file.Enums }}
// Deprecated: Not deprecated, but shouldn't be used directly or show up in documentation.
var XXXEnumGroups reflect.EnumGroups = reflect.XXXEnumGroupsImpl{
    List:   []reflect.EnumGroup{
        {{- range $file.Enums }}
        reflect.XXXEnumGroupImpl{
            GroupName: "{{ .Name }}",
            GroupLen: {{ .Len }},
            EnumSize: {{ .Size }},
            Descrs: []reflect.EnumValueDescr{
                {{- range .OrderByValues }}
                reflect.XXXEnumValueDescrImpl{
                    EnumName: "{{ .Name }}",
                    EnumNumber: {{ .Value }},
                },
                {{- end }}
            },
        },
        {{- end }} {{/* end Enum range */}} 
    },
    Lookup: map[string]reflect.EnumGroup{},
}

func init() {
    x := XXXEnumGroups.(reflect.XXXEnumGroupsImpl)
    for _, g := range x.List {
        x.Lookup[g.Name()] = g
    }
}
{{- end }} {{/* end Enum if */}} 

// Deprecated: No deprecated, but shouldn't be used directly or show up in documentation.
var XXXPackageDescr reflect.PackageDescr = reflect.XXXPackageDescrImpl{
    Name: "{{ $file.Package }}",
    Path: "{{ $file.FullPath }}",
    {{- if .File.Imports.Imports }}
    ImportDescrs: []reflect.PackageDescr {
    {{- range $index, $value := .File.Imports.Imports }}
        {{ $value.Name }}.XXXPackageDescr,
    {{- end }} {{/* end .Imports range */}} 
    },
    {{- end }} {{/* end Imports if */}} 
    {{- if .File.Enums }}
    EnumGroupsDescrs: XXXEnumGroups,
    {{- end }} {{/* end Enum if */}} 
    {{- if .File.Structs }}
    StructsDescrs: []reflect.StructDescr{
    {{- range .File.Structs }}
        reflect.XXXStructDescrImpl{
            Name: "{{ .Name }}",
            Pkg: "{{ $file.Package }}",
            Path: "{{ $file.FullPath }}",
            FieldList: []reflect.FieldDescr{
                {{- $struct := . }}
                {{- range .Fields }}
                reflect.XXXFieldDescrImpl{
                    FD: XXXMapping{{ $struct.Name }}.ByName("{{ .Name }}"),
                    {{- if .IsEnum }}
                    EG: XXXEnumGroups.ByName("{{ .IdentName }}"),
                    {{- end }}
                },
                {{- end }}
            },
        },
    {{- end }} {{/* end Structs range */}} 
    },
    {{- end }} {{/* end Structs if */}} 
}

func init() {
    runtime.RegisterPackage(XXXPackageDescr)
}