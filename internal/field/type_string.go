// Code generated by "stringer -type=Type"; DO NOT EDIT.

package field

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FTUnknown-0]
	_ = x[FTBool-1]
	_ = x[FTInt8-2]
	_ = x[FTInt16-3]
	_ = x[FTInt32-4]
	_ = x[FTInt64-5]
	_ = x[FTUint8-6]
	_ = x[FTUint16-7]
	_ = x[FTUint32-8]
	_ = x[FTUint64-9]
	_ = x[FTFloat32-10]
	_ = x[FTFloat64-11]
	_ = x[FTString-12]
	_ = x[FTBytes-13]
	_ = x[FTStruct-14]
	_ = x[FTListBool-15]
	_ = x[FTList8-16]
	_ = x[FTList16-17]
	_ = x[FTList32-18]
	_ = x[FTList64-19]
	_ = x[FTListBytes-20]
	_ = x[FTListString-21]
	_ = x[FTListStruct-22]
}

const _Type_name = "FTUnknownFTBoolFTInt8FTInt16FTInt32FTInt64FTUint8FTUint16FTUint32FTUint64FTFloat32FTFloat64FTStringFTBytesFTStructFTListBoolFTList8FTList16FTList32FTList64FTListBytesFTListStringFTListStruct"

var _Type_index = [...]uint8{0, 9, 15, 21, 28, 35, 42, 49, 57, 65, 73, 82, 91, 99, 106, 114, 124, 131, 139, 147, 155, 166, 178, 190}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
